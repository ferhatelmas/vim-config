" Init Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

" You complete me, installation:
" install clang
" cd ~;mkdir .ycm_build; cd .ycm_build;
" cmake -G "Unix Makefiles" . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp
" make ycm_support_libs
Plugin 'Valloric/YouCompleteMe'

" Ack (ag) config
Plugin 'mileszs/ack.vim'
let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'

" NerdTree
Plugin 'scrooloose/nerdtree'
" Open NerdTree if no file specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" Auto close vim if only NerdTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" NerdTree-Tabs
Plugin 'jistr/vim-nerdtree-tabs'

" Tagbar
" sudo pacman -S ctags
Plugin 'majutsushi/tagbar'

" A collection of language packs.
Plugin 'sheerun/vim-polyglot'

" Multiline cursors
Plugin 'terryma/vim-multiple-cursors'

" Ale
Plugin 'w0rp/ale'
let g:ale_fixers = {
\   'javascript': ['prettier', 'eslint'],
\   'typescript': ['prettier', 'tslint'],
\   'python': ['yapf'],
\}
let g:ale_linters = {
\   'go': ['go build', 'go vet', 'golint', 'gotype'],
\}
let g:ale_fix_on_save = 1
let g:ale_sign_column_always = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0

function! ToggleErrors()
    if empty(filter(tabpagebuflist(), 'getbufvar(v:val, "&buftype") is# "quickfix"'))
         " No location/quickfix list shown, open syntastic error location panel
         Errors
    else
        lclose
    endif
endfunction

" Snippets
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

" Super Tab to trigger ultisnips via <tab>
Plugin 'ervandew/supertab'
let g:SuperTabCrMapping = 0

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'
"
" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" Coloresque
Plugin 'gorodinskiy/vim-coloresque'

" Vim easy align
Plugin 'junegunn/vim-easy-align'

" Goldenview
Bundle 'zhaocai/GoldenView.Vim'

" Gundo
Plugin 'sjl/gundo.vim'

" tComment for comment toggling
Plugin 'tomtom/tcomment_vim'

" Airline plugin
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
let g:airline_theme='tomorrow'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

" Full path fuzzy file, buffer, mru, tag, ... finder.
Plugin 'kien/ctrlp.vim'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v(nogit|node_modules|bower_components|public|GoDeps|package|vendor|_vendor|\.(git|hg|svn))$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ }

" Git wrapper :Gblame, :Gdiff
Plugin 'tpope/vim-fugitive'

" A Vim plugin which shows a git diff in the 'gutter' (sign column)
Plugin 'airblade/vim-gitgutter'

" Vim-Bookmarks
Plugin 'MattesGroeger/vim-bookmarks'

" Vim TaskList
Plugin 'vim-scripts/TaskList.vim'

" Vim rainbow parenthesis
Plugin 'oblitum/rainbow'
let g:rainbow_active = 1

" Vim Shell
" Vim proc is needed for vimshell and you need to do 'make'
Plugin 'Shougo/vimproc.vim'
Plugin 'Shougo/vimshell.vim'

" DevDocs shortcut
Plugin 'rhysd/devdocs.vim'

Plugin 'mxw/vim-jsx'
" Enable jsx for js files
let g:jsx_ext_required = 0

" TESTING session
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'
let g:session_autosave = 'yes'

" Go support
Plugin 'fatih/vim-go'
let g:go_list_type = 'quickfix'
let g:go_fmt_command = "goimports"
let g:go_fmt_fail_silently = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_types = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_generate_tags = 1
let g:go_metalinter_autosave = 0
let g:go_metalinter_command = 'gometalinter --cyclo-over=10 --deadline=10s --sort=path --min-confidence=.90 -j 4 --aggregate ./...'
let g:go_auto_type_info = 1
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=2 shiftwidth=2

" Automatic test generation
Plugin 'buoto/gotests-vim'

" Emmet support
Plugin 'mattn/emmet-vim'

" Python support
Plugin 'klen/python-mode'

" Solarized
Plugin 'altercation/vim-colors-solarized'

" Gruvbox
Plugin 'morhetz/gruvbox'

" Zenburn colors
Plugin 'jnurmine/Zenburn'

" Dracula colors
Plugin 'zenorocha/dracula-theme', {'rtp': 'vim/'}

" npm i -g stylefmt
Plugin 'kewah/vim-stylefmt'

" Deinit Vundle
call vundle#end()
filetype plugin indent on
