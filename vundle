" | |/ /   _ _ __ ___(_) ___  _ __ ( )___  \ \   / /_ _|  \/  |
" | ' / | | | '__/ __| |/ _ \| '_ \|// __|  \ \ / / | || |\/| |
" | . \ |_| | |  \__ \ | (_) | | | | \__ \   \ V /  | || |  | |
" |_|\_\__,_|_|  |___/_|\___/|_| |_| |___/    \_/  |___|_|  |_|
"
" __     ___   _ _   _ ____  _     _____
" \ \   / / | | | \ | |  _ \| |   | ____|
"  \ \ / /| | | |  \| | | | | |   |  _|
"   \ V / | |_| | |\  | |_| | |___| |___
"    \_/   \___/|_| \_|____/|_____|_____|
"
" Init Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'

" Test
Plugin 'facebook/vim-flow'

"   ____                           _
"  / ___| ___ _ __   ___ _ __ __ _| |
" | |  _ / _ \ '_ \ / _ \ '__/ _` | |
" | |_| |  __/ | | |  __/ | | (_| | |
"  \____|\___|_| |_|\___|_|  \__,_|_|
"
" You complete me, installation:
" install clang
" cd ~;mkdir .ycm_build; cd .ycm_build;
" cmake -G "Unix Makefiles" . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp
" make ycm_support_libs
Plugin 'Valloric/YouCompleteMe'

" Ack (ag) config
Plugin 'mileszs/ack.vim'
let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'

" NerdTree
Plugin 'scrooloose/nerdtree'
" Open NerdTree if no file specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" Auto close vim if only NerdTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" NerdTree-Tabs
Plugin 'jistr/vim-nerdtree-tabs'

" Tagbar
" sudo pacman -S ctags
Plugin 'majutsushi/tagbar'

" A collection of language packs.
Plugin 'sheerun/vim-polyglot'

" Multiline cursors
Plugin 'terryma/vim-multiple-cursors'

" Syntastic
Plugin 'scrooloose/syntastic'
let g:syntastic_aggregate_errors = 1
let g:syntastic_go_go_exec = 'gom'
let g:syntastic_go_checkers = ['gofmt', 'go', 'golint', 'govet', 'gonyet', 'gotype']
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_scss_checkers = ['scss_lint']
let g:syntastic_less_use_less_lint = 1
let g:syntastic_less_options = "-l --no-color"
function! ToggleErrors()
    if empty(filter(tabpagebuflist(), 'getbufvar(v:val, "&buftype") is# "quickfix"'))
         " No location/quickfix list shown, open syntastic error location panel
         Errors
    else
        lclose
    endif
endfunction

" Snippets
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

" Super Tab to trigger ultisnips via <tab>
Plugin 'ervandew/supertab'
let g:SuperTabCrMapping = 0

" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'
"
" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" CSApprox for GVIM compatibility colorscheme
Plugin 'vim-scripts/CSApprox'

" Coloresque
Plugin 'gorodinskiy/vim-coloresque'

" Vim easy align
Plugin 'junegunn/vim-easy-align'

" Goldenview
Bundle 'zhaocai/GoldenView.Vim'

" Gundo
Plugin 'sjl/gundo.vim'

" tComment for comment toggling
Plugin 'tomtom/tcomment_vim'

" Airline plugin
Plugin 'bling/vim-airline'
let g:airline_theme='tomorrow'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
set laststatus=2

" Full path fuzzy file, buffer, mru, tag, ... finder.
Plugin 'kien/ctrlp.vim'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v(node_modules|bower_components|public|GoDeps|package|_vendor|\.(git|hg|svn))$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ }

" Git wrapper :Gblame, :Gdiff
Plugin 'tpope/vim-fugitive'

" A Vim plugin which shows a git diff in the 'gutter' (sign column)
Plugin 'airblade/vim-gitgutter'

" Vim-Bookmarks
Plugin 'MattesGroeger/vim-bookmarks'

" Vim TaskList
Plugin 'vim-scripts/TaskList.vim'

" Vim rainbow parenthesis
Plugin 'oblitum/rainbow'
let g:rainbow_active = 1

" Vim Shell
" Vim proc is needed for vimshell and you need to do 'make'
Plugin 'Shougo/vimproc.vim'
Plugin 'Shougo/vimshell.vim'

" Zeal shortcut
Plugin 'KabbAmine/zeavim.vim'


"      _                  ____            _       _
"     | | __ ___   ____ _/ ___|  ___ _ __(_)_ __ | |_
"  _  | |/ _` \ \ / / _` \___ \ / __| '__| | '_ \| __|
" | |_| | (_| |\ V / (_| |___) | (__| |  | | |_) | |_
"  \___/ \__,_| \_/ \__,_|____/ \___|_|  |_| .__/ \__|
"                                          |_|
Plugin 'kchmck/vim-coffee-script'

" JavaScript analyzer VIM
" Don't forget to go into the directory
" 'bundle/tern_for_vim' and make a
" 'npm install' and 'npm install tern-coffee'
Plugin 'marijnh/tern_for_vim'
Plugin 'othree/tern_for_vim_coffee'

Plugin 'mxw/vim-jsx'
" Enable jsx for js files
let g:jsx_ext_required = 0
" Require pragma (@jsx React.DOM) to enable
" let g:jsx_pragma_required = 1

"  _____         _   _
" |_   _|__  ___| |_(_)_ __   __ _
"   | |/ _ \/ __| __| | '_ \ / _` |
"   | |  __/\__ \ |_| | | | | (_| |
"   |_|\___||___/\__|_|_| |_|\__, |
"                            |___/
" TESTING session
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'
:let g:session_autosave = 'yes'

"   ____       _
"  / ___| ___ | | __ _ _ __   __ _
" | |  _ / _ \| |/ _` | '_ \ / _` |
" | |_| | (_) | | (_| | | | | (_| |
"  \____|\___/|_|\__,_|_| |_|\__, |
"                            |___/
" Go support
Plugin 'fatih/vim-go'
let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_high_light_structs = 1

"  _   _ _____ __  __ _
" | | | |_   _|  \/  | |
" | |_| | | | | |\/| | |
" |  _  | | | | |  | | |___
" |_| |_| |_| |_|  |_|_____|
"
" HTML AutoCloseTag
Plugin 'amirh/HTML-AutoCloseTag'

" Emmet support
Plugin 'mattn/emmet-vim'

"    _____       _   _
"   |  __ \     | | | |
"   | |__) |   _| |_| |__   ___  _ __
"   |  ___/ | | | __| '_ \ / _ \| '_ \
"   | |   | |_| | |_| | | | (_) | | | |
"   |_|    \__, |\__|_| |_|\___/|_| |_|
"           __/ |
"           |___/

" Python support
Plugin 'klen/python-mode'


"    ____       _            ____       _
"   / ___| ___ | | ___  _ __/ ___|  ___| |__   ___ _ __ ___   ___
"   | |   / _ \| |/ _ \| '__\___ \ / __| '_ \ / _ \ '_ ` _ \ / _ \
"   | |__| (_) | | (_) | |   ___) | (__| | | |  __/ | | | | |  __/
"    \____\___/|_|\___/|_|  |____/ \___|_| |_|\___|_| |_| |_|\___|
"

" Solarized
Plugin 'altercation/vim-colors-solarized'

" Gruvbox
Plugin 'morhetz/gruvbox'

" Zenburn colors
Plugin 'jnurmine/Zenburn'

" Dracula colors
Plugin 'zenorocha/dracula-theme', {'rtp': 'vim/'}

"  __  __            _    ____
"  |  \/  | __ _ _ __| | _|  _ \  _____      ___ __
"  | |\/| |/ _` | '__| |/ / | | |/ _ \ \ /\ / / '_ \
"  | |  | | (_| | |  |   <| |_| | (_) \ V  V /| | | |
"  |_|  |_|\__,_|_|  |_|\_\____/ \___/ \_/\_/ |_| |_|

" Live preview for markdown
" npm install -g livedown
Plugin 'shime/vim-livedown'
" should markdown preview get shown automatically upon opening markdown buffer
let g:livedown_autorun = 1
" should the browser window pop-up upon previewing
let g:livedown_open = 1
" the port on which Livedown server will run
let g:livedown_port = 1337

" Deinit Vundle
call vundle#end()
filetype plugin indent on
